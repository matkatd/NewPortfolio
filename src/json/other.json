[
  {
    "title": "Cloud Clock",
    "date": "Current",
    "slug": "cloudclock",
    "img": "../res/cloudclock.jpg",
    "alt": "Image of the cloudclock",
    "writeup": [
      "<h2>Context</h2>",
      "<p>For my introductory IT class, the final project was to build something with a Raspberry Pi computer. I decided on building a cloud storage unit, but with a twist. It would housed inside a clock.</p>",
      "<p>The project took several weeks to initially complete, and I keep coming back and adding/changing features. Originally it was just using NextCloud to operate as a NAS, but I took it further and hooked it up with a free No-IP DDNS domain name. This required me to figure out how to set up port forwarding and NAT virtual servers on my router.</p>",
      "<p>I figured that since I had a domain name and an Apache server already setup, I may as well use it to host my portfolio. So, next I learned how to set up a self-signed TLS certificate and moved everthing to the Pi.</p>",
      "<p>Some fun features of the clock itself include the clock body, which I found at a thrift store for a few bucks, and proceeded to gut. The only original component left is the shell. After gutting it I bought a digital display, which I soldered together and hooked up. The pi is running a python script to keep the display on the right time.</p>",
      "<img src='../res/clockguts.jpg' alt='Insides of the cloudclock' />"
    ]
  },
  {
    "title": "Accessibility on the Web",
    "date": "October 2022",
    "slug": "accessibility",
    "img": "../res/accessibility.jpg",
    "alt": "Screenshot of gear review website",
    "writeup": [
      "<h2 id='introduction'>Introduction</h2>",
      "<p>In the tech world of today, the term &quot;accessibility&quot; is thrown around a lot. Websites need to be accessible, applications need to be accessible, physical technology needs to be accessible. But what does it mean for something to <strong><em>be</em></strong> accessible? I hope to explore this further and provide insights on how you can make your work more accessible for everyone.</p>",
      "<h2 id='context'>Context</h2>",
      "<p>Accessible technology is usually focused on making technology usable for people with some sort of disability. Whether it&#39;s a lack of motor skills, vision, or hearing, we want to design our technology in such a way that anyone can use it. However, accessible design has been around much longer than computers. In 1963, the author Selwyn Goldsmith published a book called <em>Designing for the Disabled</em>, which pioneered the idea of free access for people with disabilities. He also authored the book <em>Universal Design</em>, which suggested that architects ought to work &quot;on the premise that the building users he or she is serving, including those with disabilities, are all people who can be treated as normal people&quot;. This principle applies equally well to digital designers.</p>",
      "<h3>&quot;Barrier Free&quot; Design and Design for All</h3>",
      "<p>One modern design philosophy suggests &quot;targeting the use of products, services, and systems by as many people as possible without the need for adaptation&quot; (Wikipedia). In other words, do it right the first time. Whether or not an individual has any disabilities, barrier-free design will benefit everyone who interacts with it.</p>",
      "<h3>Web Accessibility Standards</h3>",
      "<p>The most recent Web Content Accessibility Guidelines describes four main principles to follow in designing universally on the web:</p>",
      "<ol><li>Perceivable - &quot;Information and user interface components must be presentable to users in ways they can perceive&quot;</li><li>Operable - &quot;User interface components and navigation must be operable [by anyone]&quot;</li><li>Understandable - &quot;Information and the operation of the user interface must be understandable&quot;</li><li>Robust - &quot;Content must be robust enough that it can be interpreted by a wide variety of user agents, including assistive technologies&quot;</li></ol>",
      "<p>I know that this is a LOT to think about when designing and building a website, and this post will only cover a drop in the bucket. However, understanding the web accessibility principles is key to universal design, so I suggest doing additional learning on your own.</p>",
      "<p>With that, let&#39;s dive in to some specific ways to implement barrier free design on your website!</p>",
      "<h2>Tutorial</h2>",
      "<h3>Designing against visual barriers</h3>",
      "<p>It is estimated that at least 253 million people in the world are visually impaired. To put that in perspective, the United States has about 330 million people living in it. Chances are, there are people in your target audience that suffer from a lack of eyesight. Many people who cannot use the web visually will use a Screen Reader, which uses text on the website to read and describe what is going on to the user. One key way to design against visual barriers is by utilizing alt text on images. An HTML <code>img</code> tag should consist of the opening <code>&lt;img</code>, the <code>src</code>, the <code>alt</code>, and the closing <code>/&gt;</code>, resulting in something that looks like this: </p>",
      "<pre><code>&lt;<span class='hljs-selector-tag'>img</span> src=<span class='hljs-string'>'file/path.png'</span> alt=<span class='hljs-string'>'Textual description of the image/graphic'</span> /&gt;</code></pre>",
      "<p>Web auditing tools like Ahrefs will give you critical warnings if you have images missing alt text.</p>",
      "<p>Another way to design for people with visual impairment is to ensure that you have sufficient color contrast between the background and text. </p>",
      "<img src='../res/color_contrast.jpg' alt='Image of adobe color picker' />",
      "<p>There&#39;s an algorithm that determines whether a contrast ratio is appropriate, but it&#39;s quite complicated. Thankfully, there are several software options (such as <a href='https://color.adobe.com/'>https://color.adobe.com</a> shown above) that calculate it for you. All you as the designer have to do is select a text and background color, and Adobe will tell you whether those colors provide sufficient contrast.</p>",
      "<p>Other text-related issues include font size and line width. When designing an interface, it&#39;s best to use responsive units instead of fixed units. Responsive units include <code>%</code>, <code>em</code>, <code>rem</code>, <code>vw</code>, and <code>vh</code>. Fixed units would be <code>px</code> or <code>pt</code>. If you use responsive units to determine the size of text and other elements on the screen, when one is increased, everything adjusts uniformly. This allows those with poor eyesight to increase the font size without breaking the layout of your site.</p>",
      "<p>Line width is important to keep in mind when there is lots of written content. It is harder for the brain to digest text when each line is long. Most people recommend keeping text between 60 and 70 characters long.</p>",
      "<h3>Designing against auditory barriers</h3>",
      "<p>The World Health Organization estimates that more than 1.5 billion people live with hearing loss, and 430 million of those have disabling hearing loss. And those numbers keep rising. This means that designing software that is usable for those with hearing loss is becoming more and more important.</p>",
      "<p>While much of the content found on websites is made of text and images, video is becoming increasingly prevalent on the web. To implement universal design with videos, the Mozilla Developer Network recommends at least incorporating subtitles, and says that a full transcript is best.</p>",
      "<h3>Designing against tech barriers</h3>",
      "<p>Part of designing for everyone means designing for all devices. Most people in the world don&#39;t browse the web on blazing-fast desktop computers. Instead, they browse on smartphones. This presents two issues to design, the first being variable screen sizes, and the second being slower network connection.</p>",
      "<p>A solution for the first issue, smaller screen sizes lies in responsive design. This is the idea of designing an interface so it is usable on any screen size. In web design, this is done with CSS media queries.</p>",
      "<p>A media query has the following format:</p>",
      "<pre><code>@<span class='hljs-keyword'>media</span> [descriptors] {<span class='hljs-selector-class'>.css-selector</span> {<span class='hljs-attribute'>rule</span>: property}}</code></pre>",
      "<p>Media queries allow the developer to apply certain styles only to specific devices or types. For example, a media query targeting smartphones might look like this:</p>",
      "<pre><code>@<span class='hljs-keyword'>media</span> only screen and (max-width: <span class='hljs-number'>600px</span>) {<span class='hljs-selector-class'>.class</span> {<span class='hljs-attribute'>width</span>: <span class='hljs-number'>50%</span>;}}</code></pre>",
      "<p>This tells the browser to make <code>.class</code> smaller when the screen is 600px or less.</p>",
      "<p>It is common for designers to have lots of these queries (often referred to as breakpoints) for different screen sizes. To do this, slowly decrease (or increase, depending on whether you built the desktop or mobile version first) the browser window until something in your design breaks. Make note of the width of the screen at that point and write a media query with styles to fix it. Do this until you&#39;ve made sure every screen size looks good.</p>",
      "<p>Eventually, you&#39;ll get in the habit of resizing every website you visit to see how well they&#39;ve implemented responsive design :)</p>",
      "<p>Regarding the second issue, one solution is to optimize content. The less data that has to be transferred across the network, the better. A good place to start is with images. Instead of letting the browser resize images, determine what size you want your image to be, and use an application to resize it. Unless it is a big hero image that should be full resolution, shoot for images that are less than 200kB.</p>",
      "<p>A good tool for this is https:/tinypng.com. This website allows you to upload images, and it will compress and strip metadata from the file, resulting in reduced file size.</p>",
      "<img src='../res/tinypng.jpg' alt='screenshot of tinypng website' />",
      "<h2>Conclusion</h2>",
      "<p>There is so much that goes into designing and building an accessible interface. At times, it can feel burdensome to keep all these things in mind when implementing a website. However, it can help to remember that barrier-free design helps everyone, including those without the physical barriers that often come up when discussing accessibility.</p>",
      "<p>Ultimately, the goal is to help every user to use your interface more effectively, no matter their situation. The goal isn&#39;t &quot;special&quot; design, it&#39;s just good design. Accessible design and development are about improving the overall user experience, which is something everyone can celebrate.</p>",
      "<h2>Additional Resources:</h2>",
      "<ul><li><a href='https://developer.mozilla.org/en-US/docs/Learn/Common_questions/What_is_accessibility'>https://developer.mozilla.org/en-US/docs/Learn/Common_questions/What_is_accessibility</a><ul><li>This article answers common questions about what web accessibility is. It discusses general principles and basic practices to make websites more accessible</li></ul></li><li><a href='https://developer.mozilla.org/en-US/docs/Learn/Common_questions/HTML_features_for_accessibility'>https://developer.mozilla.org/en-US/docs/Learn/Common_questions/HTML_features_for_accessibility</a><ul><li>This article discusses certain HTML features that aid with accessibility. Specifically, it explains ARIA labels for links, alt attributes for images, and the ARIA role attribute.</li></ul></li><li><a href='https://developer.mozilla.org/en-US/docs/Learn/Common_questions/Design_for_all_types_of_users'>https://developer.mozilla.org/en-US/docs/Learn/Common_questions/Design_for_all_types_of_users</a><ul><li>This article discusses specific ways to design for all types of users. This includes appropriate color contrast, font sizes, line widths and image compression</li></ul></li><li><a href='https://www.w3.org/WAI/fundamentals/accessibility-intro/'>https://www.w3.org/WAI/fundamentals/accessibility-intro/</a><ul><li>This article provides an overview of what accessibility means. An important point it makes is that it&#39;s most efficient and effect to incorporate accessibility from the very beginning</li></ul></li><li><a href='https://en.wikipedia.org/wiki/Universal_design'>https://en.wikipedia.org/wiki/Universal_design</a><ul><li>Article discussing universal design. Some points that stood out were the goals of the Center for Inclusive Design and Environmental Access and the idea of designing things that are &quot;Barrier Free&quot;</li></ul></li><li><a href='https://en.wikipedia.org/wiki/Selwyn_Goldsmith'>https://en.wikipedia.org/wiki/Selwyn_Goldsmith</a><ul><li>Article on Selwyn Goldsmith, one of the early advocates for accessible technology</li></ul></li><li><a href='https://www.w3.org/WAI/WCAG21/quickref/'>https://www.w3.org/WAI/WCAG21/quickref/</a><ul><li>A quick reference guide to the Web content Accessibility Guidelines (WCAG). I like how it provides an overview of each point, and then allows you to dive deeper and better understand each aspect of each principle</li></ul></li><li><a href='https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5820628/'>https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5820628/</a><ul><li>Provides data about how many people in the world are visually impaired</li></ul></li></ul>"
    ]
  }
]
